{"version":3,"sources":["../src/switch.anatomy.ts","../src/switch.connect.ts","../src/switch.dom.ts","../src/switch.machine.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"switch\").parts(\"root\", \"input\", \"label\", \"control\", \"thumb\")\nexport const parts = anatomy.build()\n","import { dataAttr } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { visuallyHiddenStyle } from \"@zag-js/visually-hidden\"\nimport { parts } from \"./switch.anatomy\"\nimport { dom } from \"./switch.dom\"\nimport type { PublicApi, Send, State } from \"./switch.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): PublicApi<T> {\n  const isDisabled = state.context.disabled\n  const isFocusable = state.context.focusable\n  const isFocused = !isDisabled && state.context.focused\n  const isChecked = state.context.checked\n\n  const dataAttrs = {\n    \"data-active\": dataAttr(state.context.active),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-hover\": dataAttr(state.context.hovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-state\": state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": dataAttr(state.context.invalid),\n  }\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  return {\n    isChecked,\n    isDisabled,\n    isFocused,\n\n    setChecked(checked: boolean) {\n      send({ type: \"CHECKED.SET\", checked })\n    },\n\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked: isChecked })\n    },\n\n    rootProps: normalize.label({\n      ...parts.root.attrs,\n      ...dataAttrs,\n      id: dom.getRootId(state.context),\n      htmlFor: dom.getInputId(state.context),\n      onPointerMove() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { hovered: true } })\n      },\n      onPointerLeave() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { hovered: false } })\n      },\n      onPointerDown(event) {\n        if (isDisabled) return\n        // On pointerdown, the input blurs and returns focus to the `body`,\n        // we need to prevent this.\n        if (isFocused) event.preventDefault()\n        send({ type: \"CONTEXT.SET\", context: { active: true } })\n      },\n      onPointerUp() {\n        if (isDisabled) return\n        send({ type: \"CONTEXT.SET\", context: { active: false } })\n      },\n      onClick(event) {\n        if (event.target === dom.getInputEl(state.context)) {\n          event.stopPropagation()\n        }\n      },\n    }),\n\n    labelProps: normalize.element({\n      ...parts.label.attrs,\n      ...dataAttrs,\n      id: dom.getLabelId(state.context),\n    }),\n\n    thumbProps: normalize.element({\n      ...parts.thumb.attrs,\n      ...dataAttrs,\n      id: dom.getThumbId(state.context),\n      \"aria-hidden\": true,\n    }),\n\n    controlProps: normalize.element({\n      ...parts.control.attrs,\n      ...dataAttrs,\n      id: dom.getControlId(state.context),\n      \"aria-hidden\": true,\n    }),\n\n    inputProps: normalize.input({\n      ...parts.input.attrs,\n      id: dom.getInputId(state.context),\n      type: \"checkbox\",\n      required: state.context.required,\n      defaultChecked: isChecked,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-hover\": dataAttr(state.context.hovered),\n      disabled: trulyDisabled,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"aria-labelledby\": dom.getLabelId(state.context),\n      \"aria-invalid\": state.context.invalid,\n      name: state.context.name,\n      form: state.context.form,\n      value: state.context.value,\n      style: visuallyHiddenStyle,\n      onChange(event) {\n        const checked = event.currentTarget.checked\n        send({ type: \"CHECKED.SET\", checked })\n      },\n      onBlur() {\n        send({ type: \"CONTEXT.SET\", context: { focused: false } })\n      },\n      onFocus() {\n        send({ type: \"CONTEXT.SET\", context: { focused: true } })\n      },\n      onKeyDown(event) {\n        if (event.key === \" \") {\n          send({ type: \"CONTEXT.SET\", context: { active: true } })\n        }\n      },\n      onKeyUp(event) {\n        if (event.key === \" \") {\n          send({ type: \"CONTEXT.SET\", context: { active: false } })\n        }\n      },\n    }),\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./switch.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `switch:${ctx.id}`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`,\n  getThumbId: (ctx: Ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`,\n  getInputId: (ctx: Ctx) => ctx.ids?.input ?? `switch:${ctx.id}:input`,\n  getInputEl: (ctx: Ctx) => dom.queryById<HTMLInputElement>(ctx, dom.getInputId(ctx)),\n})\n","import { createMachine } from \"@zag-js/core\"\nimport { dispatchInputCheckedEvent, trackFormControl } from \"@zag-js/form-utils\"\nimport { compact } from \"@zag-js/utils\"\nimport { dom } from \"./switch.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./switch.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"switch\",\n      initial: \"ready\",\n\n      context: {\n        checked: false,\n        label: \"switch\",\n        value: \"on\",\n        ...ctx,\n      },\n\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: [\"invokeOnChange\", \"syncInputElement\"],\n      },\n\n      activities: [\"trackFormControlState\"],\n\n      on: {\n        \"CHECKED.TOGGLE\": {\n          actions: [\"toggleChecked\"],\n        },\n        \"CHECKED.SET\": {\n          actions: [\"setChecked\"],\n        },\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"],\n        },\n      },\n\n      states: {\n        ready: {},\n      },\n    },\n    {\n      activities: {\n        trackFormControlState(ctx, _evt, { send, initialContext }) {\n          return trackFormControl(dom.getInputEl(ctx), {\n            onFieldsetDisabled() {\n              ctx.disabled = true\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked })\n            },\n          })\n        },\n      },\n\n      actions: {\n        invokeOnChange(ctx) {\n          ctx.onChange?.({ checked: ctx.checked })\n        },\n        setContext(ctx, evt) {\n          Object.assign(ctx, evt.context)\n        },\n        syncInputElement(ctx) {\n          const inputEl = dom.getInputEl(ctx)\n          inputEl.checked = !!ctx.checked\n        },\n        dispatchChangeEvent(ctx, evt) {\n          const inputEl = dom.getInputEl(ctx)\n          const checked = evt.checked\n          dispatchInputCheckedEvent(inputEl, { checked, bubbles: true })\n        },\n        removeFocusIfNeeded(ctx) {\n          if (ctx.disabled && ctx.focused) {\n            ctx.focused = false\n          }\n        },\n        setChecked(ctx, evt) {\n          ctx.checked = evt.checked\n        },\n        toggleChecked(ctx, _evt) {\n          ctx.checked = !ctx.checked\n        },\n      },\n    },\n  )\n}\n"],"mappings":"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","names":["ctx"]}