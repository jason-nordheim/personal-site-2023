{"version":3,"sources":["../src/tags-input.anatomy.ts","../src/tags-input.connect.ts","../src/tags-input.dom.ts","../src/tags-input.machine.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"tagsInput\").parts(\n  \"root\",\n  \"label\",\n  \"control\",\n  \"input\",\n  \"clearTrigger\",\n  \"hiddenInput\",\n  \"tag\",\n  \"tagInput\",\n  \"tagDeleteTrigger\",\n)\n\nexport const parts = anatomy.build()\n","import { type EventKeyMap, getEventKey, getNativeEvent } from \"@zag-js/dom-event\"\nimport { ariaAttr, dataAttr } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./tags-input.anatomy\"\nimport { dom } from \"./tags-input.dom\"\nimport type { PublicApi, Send, State, TagProps } from \"./tags-input.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): PublicApi<T> {\n  const isInteractive = state.context.isInteractive\n  const isDisabled = state.context.disabled\n  const isReadOnly = state.context.readOnly\n  const isInvalid = state.context.invalid || state.context.isOverflowing\n\n  const translations = state.context.translations\n\n  const isInputFocused = state.hasTag(\"focused\")\n  const isEditingTag = state.matches(\"editing:tag\")\n  const isEmpty = state.context.count === 0\n\n  return {\n    isEmpty,\n    inputValue: state.context.trimmedInputValue,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    count: state.context.count,\n    isAtMax: state.context.isAtMax,\n\n    setValue(value: string[]) {\n      send({ type: \"SET_VALUE\", value })\n    },\n\n    clearValue(id?: string) {\n      if (id) {\n        send({ type: \"CLEAR_TAG\", id })\n      } else {\n        send(\"CLEAR_VALUE\")\n      }\n    },\n\n    addValue(value: string) {\n      send({ type: \"ADD_TAG\", value })\n    },\n\n    setValueAtIndex(index: number, value: string) {\n      send({ type: \"SET_VALUE_AT_INDEX\", index, value })\n    },\n\n    setInputValue(value: string) {\n      send({ type: \"SET_INPUT_VALUE\", value })\n    },\n\n    clearInputValue() {\n      send({ type: \"SET_INPUT_VALUE\", value: \"\" })\n    },\n\n    focus() {\n      dom.getInputEl(state.context)?.focus()\n    },\n\n    rootProps: normalize.element({\n      dir: state.context.dir,\n      ...parts.root.attrs,\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-focus\": dataAttr(isInputFocused),\n      \"data-empty\": dataAttr(isEmpty),\n      id: dom.getRootId(state.context),\n      onPointerDown() {\n        if (!isInteractive) return\n        send(\"POINTER_DOWN\")\n      },\n    }),\n\n    labelProps: normalize.label({\n      ...parts.label.attrs,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: dom.getLabelId(state.context),\n      htmlFor: dom.getInputId(state.context),\n    }),\n\n    controlProps: normalize.element({\n      id: dom.getControlId(state.context),\n      ...parts.control.attrs,\n      tabIndex: isReadOnly ? 0 : undefined,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-focus\": dataAttr(isInputFocused),\n    }),\n\n    inputProps: normalize.input({\n      ...parts.input.attrs,\n      \"data-invalid\": dataAttr(isInvalid),\n      \"aria-invalid\": ariaAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      maxLength: state.context.maxLength,\n      id: dom.getInputId(state.context),\n      defaultValue: state.context.inputValue,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"none\",\n      disabled: isDisabled || isReadOnly,\n      onChange(event) {\n        const evt = getNativeEvent(event)\n\n        if (evt.inputType === \"insertFromPaste\") return\n        let value = event.target.value\n\n        if (value.endsWith(state.context.delimiter!)) {\n          send(\"DELIMITER_KEY\")\n        } else {\n          send({ type: \"TYPE\", value, key: evt.inputType })\n        }\n      },\n      onFocus() {\n        send(\"FOCUS\")\n      },\n      onPaste(event) {\n        const value = event.clipboardData.getData(\"text/plain\")\n        send({ type: \"PASTE\", value })\n      },\n      onKeyDown(event) {\n        // handle composition when used as combobox\n        const target = event.currentTarget as HTMLElement\n        const isCombobox = target.getAttribute(\"role\") === \"combobox\"\n        const isExpanded = target.ariaExpanded === \"true\"\n\n        const keyMap: EventKeyMap = {\n          ArrowDown() {\n            send(\"ARROW_DOWN\")\n          },\n          ArrowLeft() {\n            if (isCombobox && isExpanded) return\n            send(\"ARROW_LEFT\")\n          },\n          ArrowRight() {\n            if (state.context.focusedId) {\n              event.preventDefault()\n            }\n            if (isCombobox && isExpanded) return\n            send(\"ARROW_RIGHT\")\n          },\n          Escape(event) {\n            event.preventDefault()\n            send(\"ESCAPE\")\n          },\n          Backspace() {\n            send(\"BACKSPACE\")\n          },\n          Delete() {\n            send(\"DELETE\")\n          },\n          Enter(event) {\n            event.preventDefault()\n            send(\"ENTER\")\n          },\n        }\n\n        const key = getEventKey(event, state.context)\n        const exec = keyMap[key]\n\n        if (exec) {\n          exec(event)\n          return\n        }\n      },\n    }),\n\n    hiddenInputProps: normalize.input({\n      ...parts.hiddenInput.attrs,\n      type: \"text\",\n      hidden: true,\n      name: state.context.name,\n      form: state.context.form,\n      id: dom.getHiddenInputId(state.context),\n      defaultValue: state.context.valueAsString,\n    }),\n\n    getTagProps(options: TagProps) {\n      const { value } = options\n      const id = dom.getTagId(state.context, options)\n      return normalize.element({\n        ...parts.tag.attrs,\n        id,\n        hidden: isEditingTag ? state.context.editedId === id : false,\n        \"data-value\": value,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-highlighted\": dataAttr(id === state.context.focusedId),\n        onPointerDown(event) {\n          if (!isInteractive) return\n          event.preventDefault()\n          send({ type: \"POINTER_DOWN_TAG\", id })\n        },\n        onDoubleClick() {\n          if (!isInteractive) return\n          send({ type: \"DOUBLE_CLICK_TAG\", id })\n        },\n      })\n    },\n\n    getTagInputProps(options: TagProps) {\n      const id = dom.getTagId(state.context, options)\n      const active = state.context.editedId === id\n      return normalize.input({\n        ...parts.tagInput.attrs,\n        \"aria-label\": translations.tagEdited(options.value),\n        \"aria-hidden\": true,\n        disabled: isDisabled,\n        id: dom.getTagInputId(state.context, options),\n        type: \"text\",\n        tabIndex: -1,\n        hidden: isEditingTag ? !active : true,\n        defaultValue: active ? state.context.editedTagValue : \"\",\n        onChange(event) {\n          send({ type: \"TAG_INPUT_TYPE\", value: event.target.value })\n        },\n        onBlur(event) {\n          send({ type: \"TAG_INPUT_BLUR\", target: event.relatedTarget, id })\n        },\n        onKeyDown(event) {\n          const keyMap: EventKeyMap = {\n            Enter() {\n              send(\"TAG_INPUT_ENTER\")\n            },\n            Escape() {\n              send(\"TAG_INPUT_ESCAPE\")\n            },\n          }\n\n          const exec = keyMap[event.key]\n\n          if (exec) {\n            event.preventDefault()\n            exec(event)\n          }\n        },\n      })\n    },\n\n    getTagDeleteTriggerProps(options: TagProps) {\n      const id = dom.getTagId(state.context, options)\n      return normalize.button({\n        ...parts.tagDeleteTrigger.attrs,\n        id: dom.getTagDeleteTriggerId(state.context, options),\n        type: \"button\",\n        disabled: isDisabled,\n        \"aria-label\": translations.deleteTagTriggerLabel(options.value),\n        tabIndex: -1,\n        onPointerDown(event) {\n          if (!isInteractive) {\n            event.preventDefault()\n          }\n        },\n        onPointerMove(event) {\n          if (!isInteractive) return\n          dom.setHoverIntent(event.currentTarget)\n        },\n        onPointerLeave(event) {\n          if (!isInteractive) return\n          dom.clearHoverIntent(event.currentTarget)\n        },\n        onClick() {\n          if (!isInteractive) return\n          send({ type: \"CLEAR_TAG\", id })\n        },\n      })\n    },\n\n    clearTriggerProps: normalize.button({\n      ...parts.clearTrigger.attrs,\n      id: dom.getClearTriggerId(state.context),\n      type: \"button\",\n      \"data-readonly\": dataAttr(isReadOnly),\n      disabled: isDisabled,\n      \"aria-label\": translations.clearTriggerLabel,\n      hidden: isEmpty,\n      onClick() {\n        if (!isInteractive) return\n        send(\"CLEAR_VALUE\")\n      },\n    }),\n  }\n}\n","import { createScope, indexOfId, nextById, prevById, queryAll } from \"@zag-js/dom-query\"\nimport { dispatchInputValueEvent } from \"@zag-js/form-utils\"\nimport type { MachineContext as Ctx, TagProps } from \"./tags-input.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `tags-input:${ctx.id}`,\n  getInputId: (ctx: Ctx) => ctx.ids?.input ?? `tags-input:${ctx.id}:input`,\n  getClearTriggerId: (ctx: Ctx) => ctx.ids?.clearBtn ?? `tags-input:${ctx.id}:clear-btn`,\n  getHiddenInputId: (ctx: Ctx) => `tags-input:${ctx.id}:hidden-input`,\n  getLabelId: (ctx: Ctx) => ctx.ids?.label ?? `tags-input:${ctx.id}:label`,\n  getControlId: (ctx: Ctx) => ctx.ids?.control ?? `tags-input:${ctx.id}:control`,\n  getTagId: (ctx: Ctx, opt: TagProps) => ctx.ids?.tag?.(opt) ?? `tags-input:${ctx.id}:tag:${opt.value}:${opt.index}`,\n  getTagDeleteTriggerId: (ctx: Ctx, opt: TagProps) =>\n    ctx.ids?.tagDeleteTrigger?.(opt) ?? `${dom.getTagId(ctx, opt)}:delete-btn`,\n  getTagInputId: (ctx: Ctx, opt: TagProps) => ctx.ids?.tagInput?.(opt) ?? `${dom.getTagId(ctx, opt)}:input`,\n  getEditInputId: (ctx: Ctx) => `${ctx.editedId}:input`,\n\n  getTagInputEl: (ctx: Ctx, opt: TagProps) => dom.getById<HTMLInputElement>(ctx, dom.getTagInputId(ctx, opt)),\n  getRootEl: (ctx: Ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getInputId(ctx)),\n  getHiddenInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getHiddenInputId(ctx)),\n  getEditInputEl: (ctx: Ctx) => dom.getById<HTMLInputElement>(ctx, dom.getEditInputId(ctx)),\n  getElements: (ctx: Ctx) => queryAll(dom.getRootEl(ctx), `[data-part=tag]:not([data-disabled])`),\n  getFirstEl: (ctx: Ctx) => dom.getElements(ctx)[0],\n  getLastEl: (ctx: Ctx) => dom.getElements(ctx)[dom.getElements(ctx).length - 1],\n  getPrevEl: (ctx: Ctx, id: string) => prevById(dom.getElements(ctx), id, false),\n  getNextEl: (ctx: Ctx, id: string) => nextById(dom.getElements(ctx), id, false),\n  getElAtIndex: (ctx: Ctx, index: number) => dom.getElements(ctx)[index],\n\n  getIndexOfId: (ctx: Ctx, id: string) => indexOfId(dom.getElements(ctx), id),\n  isInputFocused: (ctx: Ctx) => dom.getDoc(ctx).activeElement === dom.getInputEl(ctx),\n\n  getFocusedTagValue: (ctx: Ctx) => {\n    if (!ctx.focusedId) return null\n    const idx = dom.getIndexOfId(ctx, ctx.focusedId)\n    if (idx === -1) return null\n    return dom.getElements(ctx)[idx].dataset.value ?? null\n  },\n  setHoverIntent: (el: Element) => {\n    const tag = el.closest<HTMLElement>(\"[data-part=tag]\")\n    if (!tag) return\n    tag.dataset.deleteIntent = \"\"\n  },\n  clearHoverIntent: (el: Element) => {\n    const tag = el.closest<HTMLElement>(\"[data-part=tag]\")\n    if (!tag) return\n    delete tag.dataset.deleteIntent\n  },\n  dispatchInputEvent(ctx: Ctx) {\n    const inputEl = dom.getHiddenInputEl(ctx)\n    if (!inputEl) return\n    dispatchInputValueEvent(inputEl, { value: ctx.valueAsString })\n  },\n})\n","import { autoResizeInput } from \"@zag-js/auto-resize\"\nimport { createMachine, guards } from \"@zag-js/core\"\nimport { contains, raf } from \"@zag-js/dom-query\"\nimport { trackFormControl } from \"@zag-js/form-utils\"\nimport { trackInteractOutside } from \"@zag-js/interact-outside\"\nimport { createLiveRegion } from \"@zag-js/live-region\"\nimport { compact, warn } from \"@zag-js/utils\"\nimport { dom } from \"./tags-input.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./tags-input.types\"\n\nconst { and, not, or } = guards\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"tags-input\",\n      initial: ctx.autoFocus ? \"focused:input\" : \"idle\",\n      context: {\n        log: { current: null, prev: null },\n        inputValue: \"\",\n        editedTagValue: \"\",\n        focusedId: null,\n        editedId: null,\n        initialValue: [],\n        value: [],\n        dir: \"ltr\",\n        max: Infinity,\n        liveRegion: null,\n        blurBehavior: undefined,\n        addOnPaste: false,\n        allowEditTag: true,\n        validate: () => true,\n        delimiter: \",\",\n        ...ctx,\n        translations: {\n          clearTriggerLabel: \"Clear all tags\",\n          deleteTagTriggerLabel: (value) => `Delete tag ${value}`,\n          tagAdded: (value) => `Added tag ${value}`,\n          tagsPasted: (values) => `Pasted ${values.length} tags`,\n          tagEdited: (value) => `Editing tag ${value}. Press enter to save or escape to cancel.`,\n          tagUpdated: (value) => `Tag update to ${value}`,\n          tagDeleted: (value) => `Tag ${value} deleted`,\n          tagSelected: (value) => `Tag ${value} selected. Press enter to edit, delete or backspace to remove.`,\n          ...ctx.translations,\n        },\n      },\n      computed: {\n        count: (ctx) => ctx.value.length,\n        valueAsString: (ctx) => JSON.stringify(ctx.value),\n        trimmedInputValue: (ctx) => ctx.inputValue.trim(),\n        isInteractive: (ctx) => !(ctx.readOnly || ctx.disabled),\n        isAtMax: (ctx) => ctx.count === ctx.max,\n        isOverflowing: (ctx) => ctx.count > ctx.max,\n      },\n      watch: {\n        focusedId: [\"invokeOnHighlight\", \"logFocused\"],\n        isOverflowing: \"invokeOnInvalid\",\n        value: [\"invokeOnChange\", \"dispatchChangeEvent\"],\n        log: \"announceLog\",\n        inputValue: \"syncInputValue\",\n        editedTagValue: \"syncEditedTagValue\",\n      },\n\n      activities: [\"trackFormControlState\"],\n\n      exit: [\"removeLiveRegion\", \"clearLog\"],\n\n      on: {\n        DOUBLE_CLICK_TAG: {\n          internal: true,\n          guard: \"allowEditTag\",\n          target: \"editing:tag\",\n          actions: [\"setEditedId\", \"initializeEditedTagValue\"],\n        },\n        POINTER_DOWN_TAG: {\n          internal: true,\n          guard: not(\"isTagFocused\"),\n          target: \"navigating:tag\",\n          actions: [\"focusTag\", \"focusInput\"],\n        },\n        SET_INPUT_VALUE: {\n          actions: [\"setInputValue\"],\n        },\n        SET_VALUE: {\n          actions: [\"setValue\"],\n        },\n        CLEAR_TAG: {\n          actions: [\"deleteTag\"],\n        },\n        SET_VALUE_AT_INDEX: {\n          actions: [\"setValueAtIndex\"],\n        },\n        CLEAR_VALUE: {\n          actions: [\"clearTags\", \"clearInputValue\", \"focusInput\"],\n        },\n        ADD_TAG: {\n          // (!isAtMax || allowOverflow) && !inputValueIsEmpty\n          guard: and(or(not(\"isAtMax\"), \"allowOverflow\"), not(\"isInputValueEmpty\")),\n          actions: [\"addTag\", \"clearInputValue\"],\n        },\n        EXTERNAL_BLUR: [\n          { guard: \"addOnBlur\", actions: \"raiseAddTagEvent\" },\n          { guard: \"clearOnBlur\", actions: \"clearInputValue\" },\n        ],\n      },\n\n      entry: [\"setupDocument\", \"checkValue\"],\n\n      states: {\n        idle: {\n          on: {\n            FOCUS: \"focused:input\",\n            POINTER_DOWN: {\n              guard: not(\"hasFocusedId\"),\n              target: \"focused:input\",\n            },\n          },\n        },\n\n        \"focused:input\": {\n          tags: [\"focused\"],\n          entry: [\"focusInput\", \"clearFocusedId\"],\n          activities: [\"trackInteractOutside\"],\n          on: {\n            TYPE: {\n              actions: \"setInputValue\",\n            },\n            BLUR: [\n              {\n                guard: \"addOnBlur\",\n                target: \"idle\",\n                actions: \"raiseAddTagEvent\",\n              },\n              {\n                guard: \"clearOnBlur\",\n                target: \"idle\",\n                actions: \"clearInputValue\",\n              },\n              { target: \"idle\" },\n            ],\n            ENTER: {\n              actions: [\"raiseAddTagEvent\"],\n            },\n            DELIMITER_KEY: {\n              actions: [\"raiseAddTagEvent\"],\n            },\n            ARROW_LEFT: {\n              guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n              target: \"navigating:tag\",\n              actions: \"focusLastTag\",\n            },\n            BACKSPACE: {\n              target: \"navigating:tag\",\n              guard: and(\"hasTags\", \"isInputCaretAtStart\"),\n              actions: \"focusLastTag\",\n            },\n            PASTE: {\n              guard: \"addOnPaste\",\n              actions: [\"setInputValue\", \"addTagFromPaste\"],\n            },\n          },\n        },\n\n        \"navigating:tag\": {\n          tags: [\"focused\"],\n          activities: [\"trackInteractOutside\"],\n          on: {\n            ARROW_RIGHT: [\n              {\n                guard: and(\"hasTags\", \"isInputCaretAtStart\", not(\"isLastTagFocused\")),\n                actions: \"focusNextTag\",\n              },\n              { target: \"focused:input\" },\n            ],\n            ARROW_LEFT: {\n              actions: \"focusPrevTag\",\n            },\n            BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedId\",\n            },\n            ENTER: {\n              guard: and(\"allowEditTag\", \"hasFocusedId\"),\n              target: \"editing:tag\",\n              actions: [\"setEditedId\", \"initializeEditedTagValue\", \"focusEditedTagInput\"],\n            },\n            ARROW_DOWN: \"focused:input\",\n            ESCAPE: \"focused:input\",\n            TYPE: {\n              target: \"focused:input\",\n              actions: \"setInputValue\",\n            },\n            BACKSPACE: [\n              {\n                guard: \"isFirstTagFocused\",\n                actions: [\"deleteFocusedTag\", \"focusFirstTag\"],\n              },\n              {\n                actions: [\"deleteFocusedTag\", \"focusPrevTag\"],\n              },\n            ],\n            DELETE: {\n              actions: [\"deleteFocusedTag\", \"focusTagAtIndex\"],\n            },\n          },\n        },\n\n        \"editing:tag\": {\n          tags: [\"editing\", \"focused\"],\n          entry: \"focusEditedTagInput\",\n          activities: [\"autoResize\"],\n          on: {\n            TAG_INPUT_TYPE: {\n              actions: \"setEditedTagValue\",\n            },\n            TAG_INPUT_ESCAPE: {\n              target: \"navigating:tag\",\n              actions: [\"clearEditedTagValue\", \"focusInput\", \"clearEditedId\", \"focusTagAtIndex\"],\n            },\n            TAG_INPUT_BLUR: [\n              {\n                guard: \"isInputRelatedTarget\",\n                target: \"navigating:tag\",\n                actions: [\"clearEditedTagValue\", \"clearFocusedId\", \"clearEditedId\"],\n              },\n              {\n                target: \"idle\",\n                actions: [\"clearEditedTagValue\", \"clearFocusedId\", \"clearEditedId\", \"raiseExternalBlurEvent\"],\n              },\n            ],\n            TAG_INPUT_ENTER: {\n              target: \"navigating:tag\",\n              actions: [\"submitEditedTagValue\", \"focusInput\", \"clearEditedId\", \"focusTagAtIndex\", \"invokeOnTagUpdate\"],\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isInputRelatedTarget: (ctx, evt) => evt.relatedTarget === dom.getInputEl(ctx),\n        isAtMax: (ctx) => ctx.isAtMax,\n        hasFocusedId: (ctx) => ctx.focusedId !== null,\n        isTagFocused: (ctx, evt) => ctx.focusedId === evt.id,\n        isFirstTagFocused: (ctx) => dom.getFirstEl(ctx)?.id === ctx.focusedId,\n        isLastTagFocused: (ctx) => dom.getLastEl(ctx)?.id === ctx.focusedId,\n        isInputValueEmpty: (ctx) => ctx.trimmedInputValue.length === 0,\n        hasTags: (ctx) => ctx.value.length > 0,\n        allowOverflow: (ctx) => !!ctx.allowOverflow,\n        autoFocus: (ctx) => !!ctx.autoFocus,\n        addOnBlur: (ctx) => ctx.blurBehavior === \"add\",\n        clearOnBlur: (ctx) => ctx.blurBehavior === \"clear\",\n        addOnPaste: (ctx) => !!ctx.addOnPaste,\n        allowEditTag: (ctx) => !!ctx.allowEditTag,\n        isInputCaretAtStart(ctx) {\n          const input = dom.getInputEl(ctx)\n          if (!input) return false\n          try {\n            return input.selectionStart === 0 && input.selectionEnd === 0\n          } catch (e) {\n            return input.value === \"\"\n          }\n        },\n      },\n\n      activities: {\n        trackInteractOutside(ctx, _evt, { send }) {\n          return trackInteractOutside(dom.getInputEl(ctx), {\n            exclude(target) {\n              return contains(dom.getRootEl(ctx), target)\n            },\n            onInteractOutside(event) {\n              ctx.onInteractOutside?.(event)\n              if (event.defaultPrevented) return\n              send({ type: \"BLUR\", src: \"interact-outside\" })\n            },\n          })\n        },\n        trackFormControlState(ctx) {\n          return trackFormControl(dom.getHiddenInputEl(ctx), {\n            onFieldsetDisabled() {\n              ctx.disabled = true\n            },\n            onFormReset() {\n              ctx.value = ctx.initialValue\n            },\n          })\n        },\n        autoResize(ctx) {\n          if (!ctx.editedTagValue || ctx.idx == null || !ctx.allowEditTag) return\n          const input = dom.getTagInputEl(ctx, { value: ctx.editedTagValue, index: ctx.idx })\n          return autoResizeInput(input)\n        },\n      },\n\n      actions: {\n        raiseAddTagEvent(_, __, { self }) {\n          self.send(\"ADD_TAG\")\n        },\n        raiseExternalBlurEvent(_, evt, { self }) {\n          self.send({ type: \"EXTERNAL_BLUR\", id: evt.id })\n        },\n        invokeOnHighlight(ctx) {\n          const value = dom.getFocusedTagValue(ctx)\n          ctx.onHighlight?.({ value })\n        },\n        invokeOnTagUpdate(ctx) {\n          if (!ctx.idx) return\n          const value = ctx.value[ctx.idx]\n          ctx.onTagUpdate?.({ value, index: ctx.idx })\n        },\n        invokeOnChange(ctx) {\n          ctx.onChange?.({ values: ctx.value })\n        },\n        dispatchChangeEvent(ctx) {\n          dom.dispatchInputEvent(ctx)\n        },\n        setupDocument(ctx) {\n          ctx.liveRegion = createLiveRegion({\n            level: \"assertive\",\n            document: dom.getDoc(ctx),\n          })\n        },\n        focusNextTag(ctx) {\n          if (!ctx.focusedId) return\n          const next = dom.getNextEl(ctx, ctx.focusedId)\n          if (next) ctx.focusedId = next.id\n        },\n        focusFirstTag(ctx) {\n          raf(() => {\n            const first = dom.getFirstEl(ctx)?.id\n            if (first) ctx.focusedId = first\n          })\n        },\n        focusLastTag(ctx) {\n          const last = dom.getLastEl(ctx)\n          if (last) ctx.focusedId = last.id\n        },\n        focusPrevTag(ctx) {\n          if (!ctx.focusedId) return\n          const prev = dom.getPrevEl(ctx, ctx.focusedId)\n          ctx.focusedId = prev?.id || null\n        },\n        focusTag(ctx, evt) {\n          ctx.focusedId = evt.id\n        },\n        focusTagAtIndex(ctx) {\n          raf(() => {\n            if (ctx.idx == null) return\n            const el = dom.getElAtIndex(ctx, ctx.idx)\n            if (el) {\n              ctx.focusedId = el.id\n              ctx.idx = undefined\n            }\n          })\n        },\n        deleteTag(ctx, evt) {\n          const index = dom.getIndexOfId(ctx, evt.id)\n          const value = ctx.value[index]\n\n          // log\n          ctx.log.prev = ctx.log.current\n          ctx.log.current = { type: \"delete\", value }\n\n          ctx.value.splice(index, 1)\n        },\n        deleteFocusedTag(ctx) {\n          if (!ctx.focusedId) return\n          const index = dom.getIndexOfId(ctx, ctx.focusedId)\n          ctx.idx = index\n          const value = ctx.value[index]\n\n          // log\n          ctx.log.prev = ctx.log.current\n          ctx.log.current = { type: \"delete\", value }\n\n          ctx.value.splice(index, 1)\n        },\n        setEditedId(ctx, evt) {\n          ctx.editedId = evt.id ?? ctx.focusedId\n          ctx.idx = dom.getIndexOfId(ctx, ctx.editedId!)\n        },\n        clearEditedId(ctx) {\n          ctx.editedId = null\n        },\n        clearEditedTagValue(ctx) {\n          ctx.editedTagValue = \"\"\n        },\n        setEditedTagValue(ctx, evt) {\n          ctx.editedTagValue = evt.value\n        },\n        submitEditedTagValue(ctx) {\n          if (!ctx.editedId) return\n          const index = dom.getIndexOfId(ctx, ctx.editedId)\n          ctx.value[index] = ctx.editedTagValue ?? \"\"\n          // log\n          ctx.log.prev = ctx.log.current\n          ctx.log.current = { type: \"update\", value: ctx.editedTagValue! }\n        },\n        setValueAtIndex(ctx, evt) {\n          if (evt.value) {\n            ctx.value[evt.index] = evt.value\n            // log\n            ctx.log.prev = ctx.log.current\n            ctx.log.current = { type: \"update\", value: evt.value }\n          } else {\n            warn(\"You need to provide a value for the tag\")\n          }\n        },\n        initializeEditedTagValue(ctx) {\n          if (!ctx.editedId) return\n          const index = dom.getIndexOfId(ctx, ctx.editedId)\n          ctx.editedTagValue = ctx.value[index]\n        },\n        focusEditedTagInput(ctx) {\n          raf(() => {\n            dom.getEditInputEl(ctx)?.select()\n          })\n        },\n        setInputValue(ctx, evt) {\n          ctx.inputValue = evt.value\n        },\n        clearFocusedId(ctx) {\n          ctx.focusedId = null\n        },\n        focusInput(ctx) {\n          raf(() => {\n            dom.getInputEl(ctx)?.focus()\n          })\n        },\n        clearInputValue(ctx) {\n          ctx.inputValue = \"\"\n        },\n        syncInputValue(ctx) {\n          const input = dom.getInputEl(ctx)\n          if (!input) return\n          input.value = ctx.inputValue\n        },\n        syncEditedTagValue(ctx, evt) {\n          const id = ctx.editedId || ctx.focusedId || evt.id\n          if (!id) return\n          const el = dom.getById(ctx, `${id}:input`) as HTMLInputElement | null\n          if (!el) return\n          el.value = ctx.editedTagValue\n        },\n        addTag(ctx, evt) {\n          const value = evt.value ?? ctx.trimmedInputValue\n          const guard = ctx.validate?.({ inputValue: value, values: ctx.value })\n          if (guard) {\n            ctx.value.push(value)\n            // log\n            ctx.log.prev = ctx.log.current\n            ctx.log.current = { type: \"add\", value }\n          } else {\n            ctx.onInvalid?.({ reason: \"invalidTag\" })\n          }\n        },\n        addTagFromPaste(ctx) {\n          raf(() => {\n            const value = ctx.trimmedInputValue\n            const guard = ctx.validate?.({ inputValue: value, values: ctx.value })\n            if (guard) {\n              const trimmedValue = ctx.delimiter ? value.split(ctx.delimiter).map((v) => v.trim()) : [value]\n              ctx.value.push(...trimmedValue)\n              // log\n              ctx.log.prev = ctx.log.current\n              ctx.log.current = { type: \"paste\", values: trimmedValue }\n            } else {\n              ctx.onInvalid?.({ reason: \"invalidTag\" })\n            }\n            ctx.inputValue = \"\"\n          })\n        },\n        clearTags(ctx) {\n          ctx.value = []\n          // log\n          ctx.log.prev = ctx.log.current\n          ctx.log.current = { type: \"clear\" }\n        },\n        checkValue(ctx) {\n          ctx.initialValue = ctx.value.slice()\n        },\n        setValue(ctx, evt) {\n          ctx.value = evt.value\n        },\n        removeLiveRegion(ctx) {\n          ctx.liveRegion?.destroy()\n        },\n        invokeOnInvalid(ctx) {\n          if (ctx.isOverflowing) {\n            ctx.onInvalid?.({ reason: \"rangeOverflow\" })\n          }\n        },\n        clearLog(ctx) {\n          ctx.log = { prev: null, current: null }\n        },\n        logFocused(ctx) {\n          if (!ctx.focusedId) return\n          const index = dom.getIndexOfId(ctx, ctx.focusedId)\n\n          // log\n          ctx.log.prev = ctx.log.current\n          ctx.log.current = { type: \"select\", value: ctx.value[index] }\n        },\n        // queue logs with screen reader and get it announced\n        announceLog(ctx) {\n          if (!ctx.log.current || ctx.liveRegion == null) return\n\n          const region = ctx.liveRegion\n          const { current, prev } = ctx.log\n          let msg: string | undefined\n\n          switch (current.type) {\n            case \"add\":\n              msg = ctx.translations.tagAdded(current.value)\n              break\n            case \"delete\":\n              msg = ctx.translations.tagDeleted(current.value)\n              break\n            case \"update\":\n              msg = ctx.translations.tagUpdated(current.value)\n              break\n            case \"paste\":\n              msg = ctx.translations.tagsPasted(current.values)\n              break\n            case \"select\":\n              msg = ctx.translations.tagSelected(current.value)\n              if (prev?.type === \"delete\") {\n                msg = `${ctx.translations.tagDeleted(prev.value)}. ${msg}`\n              } else if (prev?.type === \"update\") {\n                msg = `${ctx.translations.tagUpdated(prev.value)}. ${msg}`\n              }\n              break\n            default:\n              break\n          }\n\n          if (msg) region.announce(msg)\n        },\n      },\n    },\n  )\n}\n"],"mappings":"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","names":["event","ctx"]}