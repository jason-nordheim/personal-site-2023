'use client';
import { jsx } from 'react/jsx-runtime';
import { mergeProps } from '@zag-js/react';
import { ark } from '../factory.mjs';
import { forwardRef } from '../forward-ref.mjs';
import { splitPresenceProps } from '../presence/split-presence-props.mjs';
import { useAccordionContext } from './accordion-context.mjs';
import { useAccordionItemContext } from './accordion-item-context.mjs';
import { AccordionItemPresence } from './accordion-item-presence.mjs';

const AccordionContent = forwardRef((props, ref) => {
  const [presenceProps, accordionContentProps] = splitPresenceProps(props);
  return /* @__PURE__ */ jsx(AccordionItemPresence, { ...presenceProps, children: /* @__PURE__ */ jsx(InnerAccordionContent, { ref, ...accordionContentProps }) });
});
const InnerAccordionContent = forwardRef((props, ref) => {
  const { getContentProps } = useAccordionContext();
  const accordionItem = useAccordionItemContext();
  const mergedProps = mergeProps(getContentProps(accordionItem), props);
  return /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref });
});

export { AccordionContent };
