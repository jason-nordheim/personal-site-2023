'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
require('@zag-js/tabs');
const createSplitProps = require('../create-split-props.cjs');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');
const tabPresence = require('./tab-presence.cjs');
const tabsContext = require('./tabs-context.cjs');

const TabContent = forwardRef.forwardRef((props, ref) => {
  const [presenceProps, tabContentProps] = splitPresenceProps.splitPresenceProps(props);
  const [contentProps, localProps] = createSplitProps.createSplitProps()(tabContentProps, ["value"]);
  return /* @__PURE__ */ jsxRuntime.jsx(tabPresence.TabPresence, { ...presenceProps, ...contentProps, children: /* @__PURE__ */ jsxRuntime.jsx(InnerTabContent, { ref, ...contentProps, ...localProps }) });
});
const InnerTabContent = forwardRef.forwardRef((props, ref) => {
  const [tabContentProps, divProps] = createSplitProps.createSplitProps()(props, ["value"]);
  const { getContentProps } = tabsContext.useTabsContext();
  const mergedProps = react.mergeProps(getContentProps(tabContentProps), divProps);
  return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.div, { ...mergedProps, ref });
});

exports.TabContent = TabContent;
