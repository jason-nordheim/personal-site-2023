'use client';
'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const jsxRuntime = require('react/jsx-runtime');
const react = require('@zag-js/react');
const factory = require('../factory.cjs');
const forwardRef = require('../forward-ref.cjs');
const splitPresenceProps = require('../presence/split-presence-props.cjs');
const comboboxContext = require('./combobox-context.cjs');
const comboboxPresence = require('./combobox-presence.cjs');

const ComboboxContent = forwardRef.forwardRef((props, ref) => {
  const [presenceProps, comboboxContentProps] = splitPresenceProps.splitPresenceProps(props);
  return /* @__PURE__ */ jsxRuntime.jsx(comboboxPresence.ComboboxPresence, { ...presenceProps, children: /* @__PURE__ */ jsxRuntime.jsx(InnerComboboxContent, { ref, ...comboboxContentProps }) });
});
const InnerComboboxContent = forwardRef.forwardRef((props, ref) => {
  const { contentProps } = comboboxContext.useComboboxContext();
  const mergedProps = react.mergeProps(contentProps, props);
  return /* @__PURE__ */ jsxRuntime.jsx(factory.ark.ul, { ...mergedProps, ref });
});

exports.ComboboxContent = ComboboxContent;
